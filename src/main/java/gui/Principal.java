/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Dimension;
import java.awt.Point;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JScrollBar;
import javax.swing.JViewport;
import javax.swing.ScrollPaneConstants;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;

/**
 *
 * @author Alexander √Ålvarez Marques
 */
public class Principal extends javax.swing.JFrame {

    // Variables
    JFileChooser fileChooser = new JFileChooser();
    JScrollBar verticalScrollBar;
    JScrollBar horizontalScrollBar;
    Mat mat = null;

    class MiListener implements AdjustmentListener {

        @Override
        public void adjustmentValueChanged(AdjustmentEvent e) {
            setChannelValues();
        }
    }

    /**
     * Creates new form Principal
     */
    public Principal() {

        // OpenCV
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        initComponents();
        customInit();
        super.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectFilePanel = new javax.swing.JPanel();
        selectFileTextField = new javax.swing.JTextField();
        selectFileButton = new javax.swing.JButton();
        scrollPanel = new javax.swing.JScrollPane();
        backgroundImageBean = new beans.backgroundImage();
        channelPanels = new javax.swing.JPanel();
        labelRed = new javax.swing.JLabel();
        labelGreen = new javax.swing.JLabel();
        labelBlue = new javax.swing.JLabel();
        labelMinimum = new javax.swing.JLabel();
        labelMaximum = new javax.swing.JLabel();
        labelAverage = new javax.swing.JLabel();
        fieldRedMinimum = new javax.swing.JTextField();
        fieldRedMaximum = new javax.swing.JTextField();
        fieldRedAverage = new javax.swing.JTextField();
        fieldGreenMinimum = new javax.swing.JTextField();
        fieldGreenMaximum = new javax.swing.JTextField();
        fieldGreenAverage = new javax.swing.JTextField();
        fieldBlueMinimum = new javax.swing.JTextField();
        fieldBlueMaximum = new javax.swing.JTextField();
        fieldBlueAverage = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectFilePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Select file"));

        selectFileButton.setText("Select file");
        selectFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectFilePanelLayout = new javax.swing.GroupLayout(selectFilePanel);
        selectFilePanel.setLayout(selectFilePanelLayout);
        selectFilePanelLayout.setHorizontalGroup(
            selectFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectFilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectFileTextField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        selectFilePanelLayout.setVerticalGroup(
            selectFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectFilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(selectFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(selectFileButton))
        );

        scrollPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout backgroundImageBeanLayout = new javax.swing.GroupLayout(backgroundImageBean);
        backgroundImageBean.setLayout(backgroundImageBeanLayout);
        backgroundImageBeanLayout.setHorizontalGroup(
            backgroundImageBeanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 572, Short.MAX_VALUE)
        );
        backgroundImageBeanLayout.setVerticalGroup(
            backgroundImageBeanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        scrollPanel.setViewportView(backgroundImageBean);

        channelPanels.setBorder(javax.swing.BorderFactory.createTitledBorder("Channels"));

        labelRed.setText("Red");

        labelGreen.setText("Green");

        labelBlue.setText("Blue");

        labelMinimum.setText("Minimum");

        labelMaximum.setText("Maximum");

        labelAverage.setText("Average");

        fieldRedMinimum.setText("0");

        fieldRedMaximum.setText("0");

        fieldRedAverage.setText("0");

        fieldGreenMinimum.setText("0");

        fieldGreenMaximum.setText("0");

        fieldGreenAverage.setText("0");

        fieldBlueMinimum.setText("0");

        fieldBlueMaximum.setText("0");

        fieldBlueAverage.setText("0");

        javax.swing.GroupLayout channelPanelsLayout = new javax.swing.GroupLayout(channelPanels);
        channelPanels.setLayout(channelPanelsLayout);
        channelPanelsLayout.setHorizontalGroup(
            channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(channelPanelsLayout.createSequentialGroup()
                .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelGreen)
                    .addComponent(labelBlue)
                    .addComponent(labelRed))
                .addGap(22, 22, 22)
                .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelMinimum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldRedMinimum)
                    .addComponent(fieldGreenMinimum)
                    .addComponent(fieldBlueMinimum))
                .addGap(18, 18, 18)
                .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelMaximum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldRedMaximum)
                    .addComponent(fieldGreenMaximum)
                    .addComponent(fieldBlueMaximum))
                .addGap(18, 18, 18)
                .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(fieldGreenAverage)
                    .addComponent(labelAverage, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldRedAverage, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fieldBlueAverage))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        channelPanelsLayout.setVerticalGroup(
            channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(channelPanelsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, channelPanelsLayout.createSequentialGroup()
                        .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMinimum)
                            .addComponent(labelMaximum)
                            .addComponent(labelAverage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelRed, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(fieldRedMinimum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fieldRedMaximum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(fieldRedAverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fieldGreenMinimum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelGreen)
                        .addComponent(fieldGreenMaximum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(fieldGreenAverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(channelPanelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldBlueMinimum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBlue)
                    .addComponent(fieldBlueMaximum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldBlueAverage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Copyright: Alexander √Ålvarez Marques");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanel)
                    .addComponent(selectFilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(channelPanels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectFilePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(channelPanels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFileButtonActionPerformed

        FileFilter imageFilter
                = new FileNameExtensionFilter("Image files (BMP, JPG, JPEG, WBMP, PNG, GIF)",
                        ImageIO.getReaderFileSuffixes());
        fileChooser.setFileFilter(imageFilter);
        fileChooser.setAcceptAllFileFilterUsed(false);

        int choose = fileChooser.showOpenDialog(this);

        if (choose == JFileChooser.APPROVE_OPTION) {

            // Get image
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();
            selectFileTextField.setText(filePath);

            // Load image and print
            mat = Imgcodecs.imread(selectedFile.getPath());
            BufferedImage img = (BufferedImage) HighGui.toBufferedImage(mat);
            backgroundImageBean.setImage(img);
            backgroundImageBean.paintImage();

            setChannelValues();

            // Config scroll bars
            if (img.getWidth() > scrollPanel.getWidth()) {
                scrollPanel.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
            } else {
                scrollPanel.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
            }

            if (img.getHeight() > scrollPanel.getHeight()) {
                scrollPanel.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
            } else {
                scrollPanel.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
            }

        }
        if (choose == JFileChooser.CANCEL_OPTION) {
            System.out.println("Ahora me cago en tu abuela.");
        }
    }//GEN-LAST:event_selectFileButtonActionPerformed

    private void setChannelValues() {

        JViewport viewport = scrollPanel.getViewport();

        Point pos = new Point(viewport.getViewPosition());
        Dimension size = new Dimension(scrollPanel.getWidth(), scrollPanel.getHeight());

        int[][] channels = backgroundImageBean.getChannels(mat, pos, size);

        fieldRedMinimum.setText(String.valueOf(channels[0][0]));
        fieldRedMaximum.setText(String.valueOf(channels[0][1]));
        fieldRedAverage.setText(String.valueOf(channels[0][2]));

        fieldGreenMinimum.setText(String.valueOf(channels[1][0]));
        fieldGreenMaximum.setText(String.valueOf(channels[1][1]));
        fieldGreenAverage.setText(String.valueOf(channels[1][2]));

        fieldBlueMinimum.setText(String.valueOf(channels[2][0]));
        fieldBlueMaximum.setText(String.valueOf(channels[2][1]));
        fieldBlueAverage.setText(String.valueOf(channels[2][2]));

    }

    private void customInit() {

        selectFileTextField.setEditable(false);
        verticalScrollBar = scrollPanel.getVerticalScrollBar();
        horizontalScrollBar = scrollPanel.getHorizontalScrollBar();

        verticalScrollBar.addAdjustmentListener(new MiListener());
        horizontalScrollBar.addAdjustmentListener(new MiListener());

        fieldRedMinimum.setEditable(false);
        fieldRedMaximum.setEditable(false);
        fieldRedAverage.setEditable(false);

        fieldGreenMinimum.setEditable(false);
        fieldGreenMaximum.setEditable(false);
        fieldGreenAverage.setEditable(false);

        fieldBlueMinimum.setEditable(false);
        fieldBlueMaximum.setEditable(false);
        fieldBlueAverage.setEditable(false);

        this.addComponentListener(new ComponentAdapter() {
            public void componentResized(ComponentEvent e) {
                setChannelValues();
            }
        });

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private beans.backgroundImage backgroundImageBean;
    private javax.swing.JPanel channelPanels;
    private javax.swing.JTextField fieldBlueAverage;
    private javax.swing.JTextField fieldBlueMaximum;
    private javax.swing.JTextField fieldBlueMinimum;
    private javax.swing.JTextField fieldGreenAverage;
    private javax.swing.JTextField fieldGreenMaximum;
    private javax.swing.JTextField fieldGreenMinimum;
    private javax.swing.JTextField fieldRedAverage;
    private javax.swing.JTextField fieldRedMaximum;
    private javax.swing.JTextField fieldRedMinimum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAverage;
    private javax.swing.JLabel labelBlue;
    private javax.swing.JLabel labelGreen;
    private javax.swing.JLabel labelMaximum;
    private javax.swing.JLabel labelMinimum;
    private javax.swing.JLabel labelRed;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JButton selectFileButton;
    private javax.swing.JPanel selectFilePanel;
    private javax.swing.JTextField selectFileTextField;
    // End of variables declaration//GEN-END:variables

}
